{
  "version": 3,
  "sources": ["../server.js", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.tsx", "../app/root.tsx", "../app/routes/auth/github.tsx", "../app/services/auth.server.ts", "../app/services/session.server.ts", "../app/routes/auth/github/callback.tsx", "../app/routes/dashboard.tsx", "../app/routes/auth/end.tsx", "../app/routes/logout.tsx", "../app/routes/index.tsx", "../app/routes/login.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["import { createRequestHandler } from \"@remix-run/architect\";\nimport * as build from \"@remix-run/dev/server-build\";\n\nexport const handler = createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n});\n", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/auth/github.tsx\";\nimport * as route2 from \"./routes/auth/github/callback.tsx\";\nimport * as route3 from \"./routes/dashboard.tsx\";\nimport * as route4 from \"./routes/auth/end.tsx\";\nimport * as route5 from \"./routes/logout.tsx\";\nimport * as route6 from \"./routes/index.tsx\";\nimport * as route7 from \"./routes/login.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const publicPath = \"/_static/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/auth/github\": {\n      id: \"routes/auth/github\",\n      parentId: \"root\",\n      path: \"auth/github\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/auth/github/callback\": {\n      id: \"routes/auth/github/callback\",\n      parentId: \"routes/auth/github\",\n      path: \"callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/auth/end\": {\n      id: \"routes/auth/end\",\n      parentId: \"root\",\n      path: \"auth/end\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    }\n  };", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "// app/routes/auth/github.tsx\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { authenticator } from \"~/services/auth.server\";\n\nexport let loader: LoaderFunction = () => redirect(\"/login\");\n\nexport let action: ActionFunction = ({ request }) => {\n  return authenticator.authenticate(\"github\", request);\n};", "// app/services/auth.server.ts\nimport { Authenticator } from \"remix-auth\";\nimport { sessionStorage } from \"~/services/session.server\";\nimport { GitHubStrategy } from \"remix-auth-github\";\n\n// Create an instance of the authenticator, pass a generic with what\n// strategies will return and will store in the session\nexport let authenticator = new Authenticator(sessionStorage);\n\n\nlet gitHubStrategy = new GitHubStrategy(\n  {\n    clientID: process.env.CLIENT as string,\n    clientSecret: process.env.SECRET as string,\n    callbackURL: \"http://localhost:3333/auth/github/callback\",\n  },\n  async ({ accessToken, extraParams, profile }) => {\n    // Get the user data from your DB or API using the tokens and profile\n    // return User.findOrCreate({ email: profile.emails[0].value });\n    return profile;\n  }\n);\n\nauthenticator.use(gitHubStrategy);", "// app/services/session.server.ts\nimport { createCookieSessionStorage } from \"@remix-run/node\";\n\n// export the whole sessionStorage object\nexport let sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"_session\", // use any name you want here\n    sameSite: \"lax\", // this helps with CSRF\n    path: \"/\", // remember to add this so the cookie will work in all routes\n    httpOnly: true, // for security reasons, make this cookie http only\n    secrets: [\"s3cr3t\"], // replace this with an actual secret\n    secure: process.env.NODE_ENV === \"production\", // enable this in prod only\n  },\n});\n\n// you can also export the methods individually for your own usage\nexport let { getSession, commitSession, destroySession } = sessionStorage;", "// app/routes/auth/github/callback.tsx\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { authenticator } from \"~/services/auth.server\";\n\nexport let loader: LoaderFunction = ({ request }) => {\n  return authenticator.authenticate(\"github\", request, {\n    successRedirect: \"/\",\n    failureRedirect: \"/login\",\n  });\n};", "export default function Dashboard(){\n    return (\n        <div>\n            Hurray!<br/>\n            <a href=\"/login\">Login</a><br/>\n            <a href=\"/logout\">Logout</a>\n        </div>\n    )\n}", "// app/routes/auth/github.tsx\nimport type { ActionFunction } from \"@remix-run/node\";\nimport { authenticator } from \"~/services/auth.server\";\n\nexport let action: ActionFunction = async ({ request }) => {\n    await authenticator.logout(request, { redirectTo: \"/\" });\n  };", "import { Form } from \"@remix-run/react\";\n// app/routes/login.tsx\nexport default function Login() {\n    return (\n      <Form action=\"/auth/end\" method=\"post\">\n        <button>Logout with GitHub</button>\n      </Form>\n    );\n  }", "export default function Index() {\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <h1>Welcome to Remix</h1>\n      <div>\n        Hurray, you're back to the main page!\n        <br />\n        <a href=\"/login\">Login</a>\n        <br />\n        <a href=\"/logout\">Logout</a>\n      </div>\n    </div>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\n// app/routes/login.tsx\nexport default function Login() {\n    return (\n      <Form action=\"/auth/github\" method=\"post\">\n        <button>Login with GitHub</button>\n      </Form>\n    );\n  }", "export default {'version':'065df9a4','entry':{'module':'/_static/build/entry.client-VW2HLEAD.js','imports':['/_static/build/_shared/chunk-VZY3RAOX.js','/_static/build/_shared/chunk-DNEVBLEG.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/_static/build/root-RHYAPHZH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/end':{'id':'routes/auth/end','parentId':'root','path':'auth/end','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/auth/end-RCOHKUG5.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/github':{'id':'routes/auth/github','parentId':'root','path':'auth/github','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/auth/github-6VM6IC6F.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/github/callback':{'id':'routes/auth/github/callback','parentId':'routes/auth/github','path':'callback','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/auth/github/callback-J4NKCYCZ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/dashboard-ZTEITOI5.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/_static/build/routes/index-TZZ4RQVK.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/login-JS27UUX4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/_static/build/routes/logout-GSCXW42P.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/_static/build/manifest-065DF9A4.js'};"],
  "mappings": "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",
  "names": []
}
